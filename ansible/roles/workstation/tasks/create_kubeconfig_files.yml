---
- name: get public static IP address for API server
  command: gcloud compute addresses describe k8s-the-easy-way --region us-central1 --format 'value(address)'
  changed_when: false
  register: k8s_api_public_ip

- name: check whether worker-0 kubeconfig file already exists
  stat:
    path: roles/worker/templates/worker-0.kubeconfig
  register: worker0_result

- name: run command to create worker kubeconfig files
  shell: kubectl config set-cluster k8s-the-easy-way-2 --certificate-authority=roles/common/templates/ca.pem --embed-certs=true --server=https://"{{ k8s_api_public_ip.stdout }}":6443 --kubeconfig=roles/worker/templates/"{{ item }}".kubeconfig
  when: worker0_result.stat.exists == False
  with_items:
    - worker-0
    - worker-1
    - worker-2

- name: run command to set worker kubeconfig credentials
  shell: kubectl config set-credentials system:node:"{{ item }}" --client-certificate=roles/worker/templates/"{{ item }}".pem --client-key=roles/worker/templates/"{{ item }}"-key.pem --embed-certs=true --kubeconfig=roles/worker/templates/"{{ item }}".kubeconfig
  when: worker0_result.stat.exists == False
  with_items:
    - worker-0
    - worker-1
    - worker-2

- name: run command to set worker kubeconfig context
  shell: kubectl config set-context default --cluster=k8s-the-easy-way-2 --user=system:node:"{{ item }}" --kubeconfig=roles/worker/templates/"{{ item }}".kubeconfig
  when: worker0_result.stat.exists == False
  with_items:
    - worker-0
    - worker-1
    - worker-2

- name: use default context
  shell: kubectl config use-context default --kubeconfig=roles/worker/templates/"{{ item }}".kubeconfig
  when: worker0_result.stat.exists == False
  with_items:
    - worker-0
    - worker-1
    - worker-2

- name: check whether kube-proxy kubeconfig file already exists
  stat:
    path: roles/worker/templates/kube-proxy.kubeconfig
  register: kubeproxy_result

- name: run command to create kube-proxy kubeconfig file
  shell: kubectl config set-cluster k8s-the-easy-way-2 --certificate-authority=roles/common/templates/ca.pem --embed-certs=true --server=https://"{{ k8s_api_public_ip.stdout }}":6443 --kubeconfig=roles/worker/templates/kube-proxy.kubeconfig
  when: kubeproxy_result.stat.exists == False

- name: run command to set kube-proxy kubeconfig credentials
  shell: kubectl config set-credentials kube-proxy --client-certificate=roles/worker/templates/kube-proxy.pem --client-key=roles/worker/templates/kube-proxy-key.pem --embed-certs=true --kubeconfig=roles/worker/templates/kube-proxy.kubeconfig
  when: kubeproxy_result.stat.exists == False

- name: run command to set kube-proxy kubeconfig context
  shell: kubectl config set-context default --cluster=k8s-the-easy-way-2 --user=kube-proxy --kubeconfig=roles/worker/templates/kube-proxy.kubeconfig
  when: kubeproxy_result.stat.exists == False

- name: use default context
  shell: kubectl config use-context default --kubeconfig=roles/worker/templates/kube-proxy.kubeconfig
  when: kubeproxy_result.stat.exists == False
